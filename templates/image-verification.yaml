{{- define "control.verifyImageSignature" -}}
- name: verify-image-signature
  image: "{{ .Values.global.imageInit.repository }}:{{ .Values.global.imageInit.tag }}"
  imagePullPolicy: IfNotPresent
  command:
    - sh
    - -c
    - |
      if [ -n "${COSIGN_PUBLIC_KEY}" ]; then
        # Install cosign if not present
        if ! command -v cosign &> /dev/null; then
          echo "Installing cosign..."
          # Detect architecture
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then
            COSIGN_ARCH="amd64"
          elif [ "$ARCH" = "aarch64" ]; then
            COSIGN_ARCH="arm64"
          else
            echo "Unsupported architecture: $ARCH"
            exit 1
          fi
          
          wget -q "https://github.com/sigstore/cosign/releases/download/v1.13.1/cosign-linux-${COSIGN_ARCH}"
          chmod +x "cosign-linux-${COSIGN_ARCH}"
          mv "cosign-linux-${COSIGN_ARCH}" /usr/local/bin/cosign
        fi
        
        # Verify image signature
        echo "Verifying image signature for {{ .image }}:{{ .tag }}"
        if ! cosign verify --key "${COSIGN_PUBLIC_KEY}" {{ .image }}:{{ .tag }}; then
          echo "Image signature verification failed for {{ .image }}:{{ .tag }}"
          exit 1
        fi
        echo "Image signature verification successful for {{ .image }}:{{ .tag }}"
      else
        echo "COSIGN_PUBLIC_KEY not set, skipping image signature verification"
        echo "Image verification is optional and will be skipped without a public key"
      fi
  env:
    - name: COSIGN_PUBLIC_KEY
      valueFrom:
        secretKeyRef:
          name: {{ include "control.configSecretName" . }}-cosign
          key: cosignPublicKey
          optional: true
{{- end -}}
