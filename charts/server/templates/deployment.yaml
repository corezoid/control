apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
{{- include "server.labels" . | nindent 4 }}
spec:
{{- if .Values.global.control.server.autoscaling.enabled }}
  replicas: {{ .Values.global.control.server.autoscaling.minReplicas }}
{{- end }}
  selector:
    matchLabels:
{{- include "server.labels" . | nindent 6 }}
{{- with .Values.global.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
{{- if eq .Values.global.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
{{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- include "control.server.annotations" . | nindent 4 }}
      labels:
{{- include "server.labels" . | nindent 8 }}
    spec:
  {{- if not (eq .Values.global.repotype "public") }}
  {{- if .Values.global.imagePullSecrets -}}
  {{- if .Values.global.imagePullSecrets.name }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets.name }}
  {{- end }}
  {{- end -}}
  {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.global.control.podSecurityContext | nindent 8 }}
      initContainers:
        {{ include "InitWait.postgres" . | nindent 8 }}

        {{ include "InitWait.bouncer" . | nindent 8 }}

        {{ include "InitWait.redis" . | nindent 8 }}

        {{ include "InitWait.pubsubredis" . | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.global.control.securityContext | nindent 12 }}
          image: {{ include "server.imageUrl" . | quote }}
          imagePullPolicy: {{ .Values.global.control.server.pullPolicy }}
          env:
            - name: ENABLE_API
              value: "true"
            - name: ENABLE_CRONS
              value: "false"
            - name: K8S
              value: "true"
            {{- if .Values.global.control.server.selfsigned }}
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.global.control.serverPort }}
              protocol: TCP
          {{ include "server.liveness" . | nindent 10 }}
          {{ include "server.readiness" . | nindent 10 }}
          resources:
            {{- toYaml .Values.global.control.server.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.appName }}-config-volume
              mountPath: /ebsmnt/conf/control.yml
              subPath: control.yml
            - name: {{ .Values.appName }}-attachments
              mountPath: {{ .Values.global.control.filesStorage.eventFiles }}
      volumes:
        - name: {{ .Values.appName }}-config-volume
          configMap:
            name: {{ .Values.appName }}-configmap
        {{- if .Values.global.control.server.persistantVolumeClaimCreate }}
        - name: {{ .Values.appName }}-attachments
          persistentVolumeClaim:
            claimName: {{ .Values.global.control.server.persistantVolumeClaimName }}
            readOnly: false
        {{- end }}
      {{- with .Values.global.control.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
