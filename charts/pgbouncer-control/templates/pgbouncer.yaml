{{- if .Values.global.db.bouncer }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "pgbouncer.service.name" . }}
  labels:
{{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  selector:
    app: {{ .Values.global.control.product }}
    tier: {{ .Values.appName }}
  ports:
  - name: pgbouncer
    protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Values.appName }}-autoscale
  labels:
{{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  minReplicas: {{ .Values.global.db.bouncer_minReplicas }}
  maxReplicas: {{ .Values.global.db.bouncer_maxReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.appName }}-deployment
  targetCPUUtilizationPercentage: 70

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
{{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.db.bouncer_minReplicas }}
  selector:
    matchLabels:
{{- include "pgbouncer.labels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9127"
        prometheus.io/scrape: "true"
      labels:
{{- include "pgbouncer.labels" . | nindent 8 }}
    spec:
      initContainers:
        {{ include "InitWait.postgres" . | nindent 8 }}
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.global.imageRegistry }}/utils/bitnami/pgbouncer:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbuser
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbpwd
            - name: PGBOUNCER_STATS_USERS
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbuser
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbhost
            - name: POSTGRESQL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbport
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbname
            - name: PGBOUNCER_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "control.postgresSecretName" . }}
                  key: dbname
            - name: PGBOUNCER_PORT
              value: "5432"
            - name: PGBOUNCER_IGNORE_STARTUP_PARAMETERS
              value: "extra_float_digits"
            - name: PGBOUNCER_MAX_CLIENT_CONN
              value: {{ .Values.global.db.maxclientconn | quote }}
            - name: PGBOUNCER_DEFAULT_POOL_SIZE
              value: {{ .Values.global.db.default_pool_size | quote }}
            - name: PGBOUNCER_RESERVE_POOL_SIZE
              value: "400"
            - name: PGBOUNCER_POOL_MODE
              value: {{ .Values.global.db.default_pool_mode }}
            - name: PGBOUNCER_RESERVE_POOL_TIMEOUT
              value: "2"
            - name: PGBOUNCER_SERVER_IDLE_TIMEOUT
              value: "15"
            - name: PGBOUNCER_AUTH_TYPE
              value: {{ .Values.global.db.auth_type | default "md5" | quote }}
            {{ $loglevel := .Values.global.db.bouncer_log_level }}
            {{- if eq $loglevel "debug" }}
            - name: VERBOSE
              value: "2"
            {{- end }}
          ports:
          - containerPort: 5432
          resources:
            {{ .Values.global.db.bouncer_resources | toYaml | indent 12 | trim }}
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      {{- with .Values.global.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
