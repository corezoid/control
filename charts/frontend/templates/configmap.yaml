apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.appName }}-nginx-configmap
  labels:
    {{- include "control.frontend.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes 1;
    error_log /dev/stdout;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  32000;
        multi_accept on;
    }

    http {
        client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};
        server_names_hash_bucket_size 128;
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        log_format up_log '$server_addr\t$server_port\t$http_x_forwarded_for\t$time_iso8601\tforward-to $upstream_addr\t$request\t$status\t$body_bytes_sent\t$request_time\t$upstream_response_time\t$http_referer\t$http_user_agent\t$http_cookie\t$host';
        access_log /dev/stdout up_log;

        sendfile        on;
        tcp_nopush     on;

        server_tokens   off;
        # disable buffering
        proxy_buffering off;
        proxy_max_temp_file_size 0;
        keepalive_timeout  65;
        gzip on;
        gzip_types text/css application/x-javascript text/xml application/xml application/xml+rss text/plain application/javascript text/javascript application/json image/png image/svg+xml;
        gzip_proxied any;
        include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.appName }}-site-configmap
  labels:
    {{- include "control.frontend.labels" . | nindent 4 }}
data:
  config.json: |
    {
      "apmHost": ""
    }
  control_{{ .Values.appName }}.conf: |
    {{ if .Values.global.control.apiOld -}}
    {{- if .Values.global.control.apiOld.enabled -}}
    server {
      listen {{ .Values.global.control.frontendPort }};
      server_name {{ .Values.global.control.apiOld.controlSubDomainOld }}.{{ .Values.global.control.apiOld.mainDomain }};
      client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};

      location / {
        if ($request_method = POST) {
          proxy_pass https://{{ include "control.Domain" . }};
        }
        if ($request_method != POST) {
          return 301 https://{{ include "control.Domain" . }}$request_uri;
        }
      }
    }
    {{- if .Values.global.control.apiOld.controlSubDomainOldOld -}}
    server {
      listen {{ .Values.global.control.frontendPort }};
      server_name {{ .Values.global.control.apiOld.controlSubDomainOldOld }}.{{ .Values.global.control.apiOld.mainDomain }};
      client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};

      location / {
        if ($request_method = POST) {
          proxy_pass https://{{ include "control.Domain" . }};
        }
        if ($request_method != POST) {
          return 301 https://{{ include "control.Domain" . }}$request_uri;
        }
      }
    }
    {{- end -}}
    {{- end -}}
    {{- end }}
    server {
      access_log /dev/stdout main;
      error_log  /dev/stdout;

      listen {{ .Values.global.control.frontendPort }};
      server_name {{ include "control.Domain" . }};

      charset utf-8;
      etag off;
      index index.html;
      client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};

      # gzip
      gzip on;
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 5;
      gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml image/jpeg image/png text/javascript;

      {{ include "control.nginx.add_header" . | nindent 6 }}
      {{ include "control.nginx.add_header.cors" . | nindent 6 }}

      location ~ ^/ping$ {
        return 200 "pong";
        types         { }
        default_type  text/plain;
      }

      location ~* \.(jpg|pdf|jpeg|png|gif|webp|wav|mp3|js|css|woff2|json)$ {
        expires 90d;
        root /usr/share/nginx/html;
      }

      location / {
        # Security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        {{ include "control.nginx.add_header" . | nindent 8 }}
        {{ include "control.nginx.add_header.cors" . | nindent 8 }}

        if ($request_uri ~ "/index.html") {
          add_header Cache-Control "no-cache, no-store";
          {{ include "control.nginx.add_header" . | nindent 10 }}
          {{ include "control.nginx.add_header.cors" . | nindent 10 }}
          expires 0;
        }

        # gzip_static on;
        add_header Cache-Control no-cache;
        expires -1000;
        root /usr/share/nginx/html;
        try_files $uri /index.html;
      }

      location /ws {
        proxy_pass http://realtime-service:{{ include "control.realtime.app_port" . }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }

      location ~ ^/api/1.0/download/(.*)?$request_uri$ {
        client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};
        proxy_set_header Connection "keep-alive";
        proxy_pass http://server-service:{{ .Values.global.control.serverPort }};
      }

      location ~ ^/api/1.0/download/(.*)$ {
        add_header Content-disposition "attachment";
        {{ include "control.nginx.add_header" . | nindent 8 }}
        {{ include "control.nginx.add_header.cors" . | nindent 8 }}
        alias {{ .Values.global.control.filesStorage.eventFiles }}/$1;
      }

      location ~ ^/(api|papi) {
        client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};
        proxy_set_header Connection "keep-alive";
        proxy_pass http://server-service:{{ .Values.global.control.serverPort }};
      }

    }
    {{- if .Values.global.control.apiSubDomain }}
    server {
      access_log /dev/stdout main;
      error_log  /dev/stdout;

      listen {{ .Values.global.control.frontendPort }};
      {{ if .Values.global.control.apiOld -}}
      {{- if .Values.global.control.apiOld.enabled -}}
      server_name {{ include "control.ApiDomain" . }} {{ .Values.global.control.apiSubDomain }}.{{ .Values.global.control.apiOld.mainDomain }};
      {{- else -}}
      server_name {{ include "control.ApiDomain" . }};
      {{- end -}}
      {{- else -}}
      server_name {{ include "control.ApiDomain" . }};
      {{- end }}

      charset utf-8;
      etag off;

      client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};

      # gzip
      gzip on;
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 5;
      gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml image/jpeg image/png;

      {{ include "control.nginx.add_header" . | nindent 6 }}
      {{ include "control.nginx.add_header.cors" . | nindent 6 }}

      location ~ ^/ping$ {
        return 200 "ok";
        types         { }
        default_type  text/plain;
      }

      location / {
        return 200 "ok";
        types         { }
        default_type  text/plain;
      }

      location /v/1.0 {
        client_max_body_size {{ include "control.frontend.nginx.client_max_body_size" . }};
        proxy_pass http://server-service:{{ .Values.global.control.serverPort }}/papi/1.0;
      }
    }
    {{- end }}
