apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
{{- include "frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.global.control.frontend.autoscaling.enabled }}
  replicas: {{ .Values.global.control.frontend.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
{{- include "frontend.labels" . | nindent 6 }}
{{- with .Values.global.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
    {{- if eq .Values.global.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
{{- include "frontend.labels" . | nindent 8 }}
    spec:
      {{- if .Values.global.control.terminationGracePeriodSeconds.front }}
      terminationGracePeriodSeconds: {{ .Values.global.control.terminationGracePeriodSeconds.front }}
      {{- end }}
      {{- if not (eq .Values.global.repotype "public") }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets.name }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.global.control.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.appName }}
          image: {{ include "frontend.imageUrl" . | quote }}
          imagePullPolicy: {{ .Values.global.control.frontend.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.control.frontendPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.global.control.frontend.resources | nindent 12 }}
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-site
              mountPath: /etc/nginx/conf.d/control_{{ .Values.appName }}.conf
              subPath: control_frontend.conf
            - name: config-site
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
            - name: {{ .Values.appName }}-attachments
              mountPath: {{ .Values.global.control.filesStorage.eventFiles }}
      volumes:
        - name: config-nginx
          configMap:
            name: {{ .Values.appName }}-nginx-configmap
        - name: config-site
          configMap:
            name: {{ .Values.appName }}-site-configmap
        {{- if .Values.global.persistantVolumeClaimCreate }}
        - name: {{ .Values.appName }}-attachments
          persistentVolumeClaim:
            claimName: {{ .Values.global.control.server.persistantVolumeClaimName }}
            readOnly: true
        {{- end }}
      {{- with .Values.global.control.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
