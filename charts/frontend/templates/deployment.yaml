{{- $global_data := .Values.global }}
{{- $control_data := $global_data.control }}
{{- $control_data_frontend := $global_data.control.frontend }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
    {{- include "control.frontend.labels" . | nindent 4 }}
spec:
  {{- if not $control_data_frontend.autoscaling.enabled }}
  replicas: {{ $control_data_frontend.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "control.frontend.labels" . | nindent 6 }}
{{- with $global_data.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
    {{- if eq $global_data.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "control.frontend.labels" . | nindent 8 }}
    spec:
      {{- if $control_data.terminationGracePeriodSeconds.front }}
      terminationGracePeriodSeconds: {{ $control_data.terminationGracePeriodSeconds.front }}
      {{- end }}
      {{- if not (eq $global_data.repotype "public") }}
      imagePullSecrets:
        - name: {{ $global_data.imagePullSecrets.name }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml $control_data.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.appName }}
          image: {{ include "control.frontend.imageUrl" . | quote }}
          imagePullPolicy: {{ $control_data_frontend.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $control_data.frontendPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml $control_data_frontend.resources | nindent 12 }}
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-site
              mountPath: /etc/nginx/conf.d/control_{{ .Values.appName }}.conf
              subPath: control_frontend.conf
            - name: config-site
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
            - name: {{ .Values.appName }}-attachments
              mountPath: {{ $control_data.filesStorage.eventFiles }}
      volumes:
        - name: config-nginx
          configMap:
            name: {{ .Values.appName }}-nginx-configmap
        - name: config-site
          configMap:
            name: {{ .Values.appName }}-site-configmap
        {{- if $control_data.server.persistantVolumeClaimCreate }}
        - name: {{ .Values.appName }}-attachments
          persistentVolumeClaim:
            claimName: {{ $control_data.server.persistantVolumeClaimName }}
            readOnly: true
        {{- end }}
      {{- with $control_data.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $control_data.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $control_data.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
