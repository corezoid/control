apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.appName }}-configmap
  labels:
{{- include "cron.labels" . | nindent 4 }}
data:
  control_{{ .Values.appName }}.yml: |
    # Application port
    port: {{ .Values.global.control.cronPort }}
    # API version
    apiVersion: "{{ .Values.global.control.apiVersion }}"
    # Secret for submitting requests between Control applications.
    apiSecret: {{ .Values.global.control.apiSecret }}
    browserExtensionsSecret: {{ .Values.global.control.browserExtensionsSecret }}
    googleApiKey: {{ .Values.global.control.googleApiKey }}
    superAdminApiKey: {{ .Values.global.control.superAdminApiKey }} # Superadmin API key
    locales: {{- range .Values.global.control.locales }} # Supported localizations
      - {{.}}{{- end }}
    timeZone: {{ .Values.global.control.timeZone }} # Time zone from which time is calculated in notification letters.
    enableAPI: false # Enable api mode
    enableCrons: true # Enable cron mode
    session:
      ttl: {{ .Values.global.control.session.ttl }}
    connectors:
      apiLogin: {{ .Values.global.control.connectors.apiLogin }}
      apiSecret: {{ .Values.global.control.connectors.apiSecret }}
      convId: {{ .Values.global.control.connectors.convId }}
      syncApiUrl: {{ .Values.global.control.connectors.syncApiUrl }}
    auth: # Auth settings via Single Account
      disablePublicApiCheck: {{ .Values.global.control.auth.disablePublicApiCheck }}
      name: {{ .Values.global.control.auth.name }}
      saSecretKey: {{ .Values.global.control.auth.key }}
      url: https://{{ .Values.global.control.auth.domain }}
    trackUrl: https://{{ .Values.global.control.domain }} # Control Admin domain
    apiCorezoid: https://{{ .Values.global.control.apiCorezoidDomain }} # Corezoid Api domain
    adminCorezoid: https://{{ .Values.global.control.adminCorezoidDomain }} # Corezoid Admin domain
    corezoidSyncApiUrl: {{ .Values.global.control.corezoidSyncApiUrl }}
    db: # PostgreSQL settings
      mainDB: # PostgreSQL Main DB settings
        name: {{ .Values.global.db.secret.data.dbname | default "control" }}
        userName: {{ .Values.global.db.secret.data.dbuser }}
        password: {{ .Values.global.db.secret.data.dbpwd }}
        settings:
          {{ if .Values.global.db.bouncer }}
          host: pgbouncer-service
          {{ else }}
          host: {{ .Values.global.db.secret.data.dbhost }}
          {{ end }}
          port: {{ .Values.global.db.secret.data.dbport }}
          dialect: postgres
          logging: false
          pool:
            max: 5000
            min: 0
            idle: 20000
            acquire: 60000
    redis: # Redis cache settings
      host: {{ .Values.global.redis.secret.data.host }}
      port: {{ .Values.global.redis.secret.data.port }}
      {{ if .Values.global.redis.secret.data.password }}password: {{ .Values.global.redis.secret.data.password }}{{ end }}
      pool:
        min: 2
        max: 50
        idle: 30000
    redisPubSub: # Redis PubSub settings for Real-Time
      host: {{ .Values.global.redis.secret.data.host_PubSub }}
      port: {{ .Values.global.redis.secret.data.port_PubSub}}
      {{ if .Values.global.redis.secret.data.password }}password: {{ .Values.global.redis.secret.data.password }}{{ end }}
      pool:
        min: 2
        max: 50
        idle: 30000
    elasticsearch: # Elasticsearch settings
      protocol: {{ .Values.global.elasticsearch.secret.data.schema }}
      host: {{ .Values.global.elasticsearch.secret.data.host }}
      port: {{ .Values.global.elasticsearch.secret.data.port }}
      pool:
        max: 20
        min: 2
        idle: 30000
    elasticsearchLogs: # Elasticsearch settings for logs
      host: {{ .Values.global.elasticsearchLogs.secret.data.host }}
      port: {{ .Values.global.elasticsearchLogs.secret.data.port }}
      userName: {{ .Values.global.elasticsearchLogs.secret.data.userName }}
      password: {{ .Values.global.elasticsearchLogs.secret.data.password }}
      index: {{ .Values.global.elasticsearchLogs.secret.data.index }}
      bulkSize: 10
      level: custom

    corezoid: # Corezoid processes settings
      apiSecret: "{{ .Values.global.control.corezoid.apiSecret }}"
      companyId: {{ .Values.global.control.corezoid.companyId }} # Corezoid company ID with Control processes
      processes:
        sendEmail: # Corezoid process for send email
          directUrl: {{ .Values.global.control.corezoid.processes.sendEmail.directUrl }}
          convId: {{ .Values.global.control.corezoid.processes.sendEmail.convId }}
        accRegistrations: # Corezoid process for Control registrations
          directUrl: {{ .Values.global.control.corezoid.processes.accRegistrations.directUrl }}
          convId: {{ .Values.global.control.corezoid.processes.accRegistrations.convId }}

    requestLimits:
      ip: {{ .Values.global.control.requestLimits.ip }}
    filesStorage: # Shared folder for uploaded files
      eventFiles: {{ .Values.global.control.filesStorage.eventFiles }}
    webConfig: # Client settings while startup
      avatarPath: https://{{ .Values.global.control.auth.domain }}/avatars/52x52/{userId}.jpg # Avatar regexp
      systemUserAvatar: https://{{ .Values.global.control.domain }}/static/systemUserAvatar.svg # System suer avatar
      adminCorezoid: https://{{ .Values.global.control.adminCorezoidDomain }} # Corezoid Admin domain
      widgetUrl: https://{{ .Values.global.control.domain }} # Control widget host
      supportEmail: {{ .Values.global.control.webConfig.supportEmail }} # Email for support
      realtimeApi: wss://{{ .Values.global.control.domain }} # Control-realtime host
      apiDoc: https://{{ .Values.global.control.domain }}/api.html # API doc host
      maxFileSize: {{ .Values.global.control.webConfig.maxFileSize }} # Max filesize
    channels:
      gmail:
        clientId: {{ .Values.global.control.channels.gmail.clientId }}
        clientSecret: {{ .Values.global.control.channels.gmail.clientSecret }}
        ignoredDomains: {{- range .Values.global.control.channels.gmail.ignoredDomains }}
          - {{.}}{{- end }}
