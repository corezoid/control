{{- if .Values.global.control.redis }}
{{- if .Values.global.control.redis.internal }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: control-{{ .Values.appName }}-master
  labels:
    {{- include "control.redis.labels" . | nindent 4 }}
    application: control-{{ .Values.appName }}
spec:
  selector:
    matchLabels:
      {{- include "control.redis.labels" . | nindent 6 }}
      role: master
      application: control-{{ .Values.appName }}
  replicas: {{ .Values.global.control.redis.replicas | default "1" }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-redis.yaml") . | sha256sum }}
      labels:
        {{- include "control.redis.labels" . | nindent 8 }}
        role: master
        application: control-{{ .Values.appName }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.global.control.podSecurityContext | nindent 8 }}
      containers:
      - name: master
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 300m
            memory: 700Mi
          requests:
            cpu: 50m
            memory: 600Mi
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "redis-cli -h localhost ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "redis-cli -h localhost ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        ports:
        - containerPort: {{ .Values.appPort }}
        volumeMounts:
          - name: redisconfig
            mountPath: /usr/local/etc/redis
          - name: {{ .Values.appName }}-claim
            mountPath: /ebsmnt/data
      volumes:
        - name: redisconfig
          configMap:
            name: control-{{ .Values.appName }}-config
        - name: {{ .Values.appName }}-claim
          persistentVolumeClaim:
            claimName: control-{{ .Values.global.redis.persistantVolumeClaimName }}
            readOnly: false
      {{- with .Values.global.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
