{{- $global := .Values.global }}
{{- $control_data := $global.control }}
{{- $control_tasks_data := $control_data.control_tasks.config }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "control.tasks.configmap.name" . }}
  labels:
    {{- include "control-tasks.labels" . | nindent 4 }}
data:
  {{ .Values.configName }}: |
    {
      "control": {
        "token": "${CONTROL_TOKEN}",
        "host": "${CONTROL_HOST}",
        "protocol": "${CONTROL_PROTOCOL}",
        "insecure_skip_verify": ${CONTROL_INSECURE_SKIP_VERIFY},
        "maxUploadFileSize": "{{ include "control.frontend.nginx.client_max_body_size" . }}"
      },
      "corezoid": {
        "host": "https://{{ $control_data.apiCorezoidDomain }}",
        "insecure_skip_verify": ${CONTROL_INSECURE_SKIP_VERIFY}
      },
      {{- if $control_data.apiGWDomain }}
      "apigw": {
      {{- if hasPrefix "http://" $control_data.apiGWDomain }}
        "host": "{{ $control_data.apiGWDomain }}"
      {{- else }}
        "host": "https://{{ $control_data.apiGWDomain }}"
      {{- end }},
        "insecure_skip_verify": ${CONTROL_INSECURE_SKIP_VERIFY}
      },
      {{- end }}
      "postgres": {
        "host": "${DB_HOST}",
        "port": ${DB_PORT},
        "database": "${DB_NAME}",
        "user": "${DB_USER}",
        "password": "${DB_PASSWORD}",
        {{- if $global.db.secret.slave }}
        {{- if $global.db.secret.slave.enabled }}
        "sslMode": "${DB_SSLMODE}",
        {{- end }}
        {{- else }}
        "sslMode": "${DB_SSLMODE}"
        {{- end }}
        {{- if $global.db.secret.slave }}
        {{- if $global.db.secret.slave.enabled }}
        "slaves": [
          {
            "host": "${DB_SLAVE_HOST}",
            "port": ${DB_SLAVE_PORT}
          }
        ]
        {{- end }}
        {{- end }}
      },
      {{- if and (hasKey .Values.global.redis "cluster") (.Values.global.redis.cluster.enable) }}
      "redisCluster": {
        "nodes": [
        {{- $nodeCount := len .Values.global.redis.cluster.nodes }}
        {{- range $index, $node := .Values.global.redis.cluster.nodes }}
          {
            "host": "{{ $node.host }}",
            "port": {{ $node.port }}
          }{{- if lt $index (sub $nodeCount 1) }},{{- end }}
        {{- end }}
        ],
        "database": ${REDIS_DATABASE},
        "password": "${REDIS_PASSWORD}"
      },
      {{- else }}
      "redis": {
        "host": "${REDIS_HOST}",
        "port": ${REDIS_PORT},
        "database": ${REDIS_DATABASE},
        "password": "${REDIS_PASSWORD}"
      },
      {{- end }}
      {{- if $control_data.scylladb }}
      "scylladb": {
      {{- if $control_data.scylladb.internal }}
          "contactPoints": [
              "scylla-service"
          ],
      {{- else }}
          "contactPoints": {{ toJson $control_data.scylladb.contactPoints }},
      {{- end }}
          "keyspace": "{{ $control_data.scylladb.keyspace }}"
      },
      {{- end }}
      "metrics": {
        "port": {{ .Values.appReadinessHttpPort | default "9100" }}
      },
      {{- if $control_data.connectors }}
      "connectors": {
        "convId": ${CONFIG_CONNECTORS_CONVID},
        "apiLogin": ${CONFIG_CONNECTORS_APILOGIN},
        "apiSecret": "${CONFIG_CONNECTORS_APISECRET}",
        "url": "${CONFIG_CONNECTORS_COREZOID_SYNCAPI_URL}",
        "insecure_skip_verify": ${CONTROL_INSECURE_SKIP_VERIFY}
      },
      {{- end }}
      "sa": {
        "url": "${CONFIG_SA_URL}",
        "secretKey": "${CONFIG_SA_SECRETKEY}",
        "insecure_skip_verify": ${CONTROL_INSECURE_SKIP_VERIFY}
      }
      {{- if or (and (hasKey $control_data "control_tasks") (hasKey $control_data.control_tasks "config") (hasKey $control_data.control_tasks.config "crons") (or (hasKey $control_data.control_tasks.config.crons "actors_cleaner") (hasKey $control_data.control_tasks.config.crons "scylladb_cleaner") (hasKey $control_data.control_tasks.config.crons "actors_filters_set_total"))) (not (and (hasKey $control_data "control_tasks") (hasKey $control_data.control_tasks "config") (hasKey $control_data.control_tasks.config "crons"))) }}
      ,
      "crons": {
        {{- if or (and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "scylladb_cleaner")) (not (and (hasKey $control_tasks_data "crons"))) }}
        "scylladb_cleaner": {
          {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "scylladb_cleaner") (hasKey $control_tasks_data.crons.scylladb_cleaner "workers_count") }}
          "workers_count": {{ $control_tasks_data.crons.scylladb_cleaner.workers_count }},
          {{- else }}
          "workers_count": 5,
          {{- end }}
          "tables": [
            {"table": "counters_minutes", "ttl": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_minutes_ttl | default 7776000 }}, "periodicity_days": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_minutes_periodicity_days | default 90 }}},
            {"table": "counters_hours", "ttl": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_hours_ttl | default 7776000 }}},
            {"table": "counters_days", "ttl": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_days_ttl | default 7776000 }}},
            {"table": "counters_uniq_minutes", "ttl": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_uniq_minutes_ttl | default 7776000 }}},
            {"table": "counters_uniq_hours", "ttl": {{ $control_tasks_data.crons.scylladb_cleaner.tables.counters_uniq_hours_ttl | default 7776000 }}}
          ]
        },
        {{- end }}
        {{- if or (and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "graph_gitlab_saver")) (not (and (hasKey $control_tasks_data "crons"))) }}
        "graph_gitlab_saver": {
          "workers_count": {{ $control_tasks_data.crons.graph_gitlab_saver.workers_count | default 5 }},
          "url": "{{ $control_tasks_data.crons.graph_gitlab_saver.url }}",
          "token": "{{ $control_tasks_data.crons.graph_gitlab_saver.token }}",
          "branch": "{{ $control_tasks_data.crons.graph_gitlab_saver.branch }}",
          "project_id": {{ $control_tasks_data.crons.graph_gitlab_saver.project_id }}
        },
        {{- end }}
        {{- if or (and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_cleaner")) (not (and (hasKey $control_tasks_data "crons"))) }}
        "actors_cleaner": {
          {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_cleaner") (hasKey $control_tasks_data.crons.actors_cleaner "workers_count") }}
          "workers_count": {{ $control_tasks_data.crons.actors_cleaner.workers_count }},
          {{- else }}
          "workers_count": 5,
          {{- end }}
          {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_cleaner") (hasKey $control_tasks_data.crons.actors_cleaner "ttl") }}
          "ttl": {{ $control_tasks_data.crons.actors_cleaner.ttl }}
          {{- else }}
          "ttl": 0
          {{- end }}
        }
        {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_filters_set_total") }},{{- end }}
        {{- end }}
        {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_filters_set_total") }}
        "actors_filters_set_total": {
          {{- if and (hasKey $control_tasks_data "crons") (hasKey $control_tasks_data.crons "actors_filters_set_total") (hasKey $control_tasks_data.crons.actors_filters_set_total "workers_count") }}
          "workers_count": {{ $control_tasks_data.crons.actors_filters_set_total.workers_count }}
          {{- else }}
          "workers_count": 10
          {{- end }}
        }
        {{- end }}
      }
      {{- end }}
    }
