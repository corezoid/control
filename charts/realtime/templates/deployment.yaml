{{- $global_data := .Values.global }}
{{- $control_data := $global_data.control }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels: {{- include "realtime.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "realtime.labels" . | nindent 6 }}
{{- with $global_data.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
  {{- if not $control_data.realtime.autoscaling.enabled }}
  replicas: {{ $control_data.realtime.autoscaling.minReplicas }}
  {{- end }}
    {{- if eq $global_data.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels: {{- include "realtime.labels" . | nindent 8 }}
    spec:
      {{- if not (eq $global_data.repotype "public") }}
      imagePullSecrets:
        - name: {{ $global_data.imagePullSecrets.name }}
      {{- end }}
      {{- if $control_data.terminationGracePeriodSeconds.front }}
      terminationGracePeriodSeconds: {{ $control_data.terminationGracePeriodSeconds.front }}
      {{- end }}
      serviceAccountName: {{ .Values.appName }}-serviceaccount
      securityContext:
        {{- toYaml .Values.global.control.podSecurityContext | nindent 8 }}
      initContainers:
        {{ include "InitWait.redis" . | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}-realtime
          securityContext: {{- toYaml $control_data.securityContext | nindent 12 }}
          image: {{ include "realtime.imageUrl" . | quote }}
          imagePullPolicy: {{ $control_data.realtime.pullPolicy | default "IfNotPresent" }}
          env:
            - name: K8S
              value: "true"
            - name: CONTROL_REALTIME_PORT
              value: {{ include "control.realtime.app_port" . | quote }}
            - name: CONTROL_REALTIME_SESSION_TTL
              value: {{ .Values.global.control.session.ttl | quote }}
            - name: CONTROL_REALTIME_SESSION_COOKIENAME
              value: {{ .Values.global.control.session.cookieName | quote }}

            {{- include "control.container_envs_redis" . | nindent 12 }}
          ports:
            - name: ws
              containerPort: {{ include "control.realtime.app_port" . }}
              protocol: TCP
          {{- if $global_data.serviceMonitor }}
          {{- if $global_data.serviceMonitor.enabled }}
            - name: metrics
              containerPort: {{ include "control.realtime.metrics_port" . }}
              protocol: TCP
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: ws
            # tcpSocket:
            #   port: ws
          readinessProbe:
            # tcpSocket:
            #   port: ws
            httpGet:
              path: /
              port: ws
          resources:
            {{- toYaml .Values.global.control.realtime.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.appName }}-config-volume
              mountPath: {{ include "control.realtime.app.configFullPath" . }}
              subPath: {{ .Values.configName }}
      volumes:
        - name: {{ .Values.appName }}-config-volume
          configMap:
            name: {{ include "control.realtime.configmap.name" . }}
      {{- with $control_data.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $control_data.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $control_data.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
