apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
{{- include "widget.labels" . | nindent 4 }}
spec:
  {{- if not .Values.global.control.widget.autoscaling.enabled }}
  replicas: {{ .Values.global.control.widget.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
{{- include "widget.labels" . | nindent 6 }}
{{- with .Values.global.deploymentStrategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
    {{- if eq .Values.global.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
{{- include "widget.labels" . | nindent 8 }}
    spec:
      {{- if .Values.global.control.terminationGracePeriodSeconds.widget }}
      terminationGracePeriodSeconds: {{ .Values.global.control.terminationGracePeriodSeconds.widget }}
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.global.control.podSecurityContext | nindent 8 }}
      {{- if .Values.global.control.cosignPublicKey }}
      initContainers:
        {{- include "control.verifyImageSignature" (dict "image" (include "widget.imageUrl" .) "tag" "" "Values" .Values "include" .include) | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.appName }}
          image: {{ include "widget.imageUrl" . | quote }}
          imagePullPolicy: {{ .Values.global.control.widget.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.control.widgetPort }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /ping
          #     port: http
          #   initialDelaySeconds: 15
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /ping
          #     port: http
          #   initialDelaySeconds: 15
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          resources:
            {{- toYaml .Values.global.control.widget.resources | nindent 12 }}
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config-site
              mountPath: /etc/nginx/conf.d/control_{{ .Values.appName }}.conf
              subPath: control_widget.conf
      volumes:
        - name: config-nginx
          configMap:
            name: {{ .Values.appName }}-nginx-configmap
        - name: config-site
          configMap:
            name: {{ .Values.appName }}-site-configmap
      {{- with .Values.global.control.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.control.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
